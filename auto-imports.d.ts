// Generated by 'unplugin-auto-import'
export {}
declare global {
  const Booking: typeof import('./src/models/Booking.js')['Booking']
  const Cap: typeof import('./src/models/Cap.js')['Cap']
  const Competition: typeof import('./src/models/Competition.js')['Competition']
  const Contract: typeof import('./src/models/Contract.js')['Contract']
  const EffectScope: typeof import('vue')['EffectScope']
  const Fixture: typeof import('./src/models/Fixture.js')['Fixture']
  const FixtureLeg: typeof import('./src/models/FixtureLeg.js')['FixtureLeg']
  const Goal: typeof import('./src/models/Goal.js')['Goal']
  const Injury: typeof import('./src/models/Injury.js')['Injury']
  const Loan: typeof import('./src/models/Loan.js')['Loan']
  const Match: typeof import('./src/models/Match.js')['Match']
  const PenaltyShootout: typeof import('./src/models/PenaltyShootout.js')['PenaltyShootout']
  const Player: typeof import('./src/models/Player.js')['Player']
  const PlayerHistory: typeof import('./src/models/PlayerHistory.js')['PlayerHistory']
  const Squad: typeof import('./src/models/Squad.js')['Squad']
  const SquadPlayer: typeof import('./src/models/SquadPlayer.js')['SquadPlayer']
  const Stage: typeof import('./src/models/Stage.js')['Stage']
  const Substitution: typeof import('./src/models/Substitution.js')['Substitution']
  const TableRow: typeof import('./src/models/TableRow.js')['TableRow']
  const Team: typeof import('./src/models/Team.js')['Team']
  const Transfer: typeof import('./src/models/Transfer.js')['Transfer']
  const User: typeof import('./src/models/User.js')['User']
  const _groupBy: typeof import('lodash.groupby')['default']
  const _keyBy: typeof import('lodash.keyby')['default']
  const _orderBy: typeof import('lodash.orderby')['default']
  const _pick: typeof import('lodash.pick')['default']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const axios: typeof import('axios')['default']
  const baseCapFragment: typeof import('./src/fragments/match')['baseCapFragment']
  const baseSquadFragment: typeof import('./src/fragments/squad')['baseSquadFragment']
  const baseSquadPlayerFragment: typeof import('./src/fragments/squad')['baseSquadPlayerFragment']
  const baseStageFragment: typeof import('./src/fragments/competition')['baseStageFragment']
  const bookingFragment: typeof import('./src/fragments/match')['bookingFragment']
  const capFragment: typeof import('./src/fragments/match')['capFragment']
  const capitalize: typeof import('./src/helpers/formatters.js')['capitalize']
  const competitionFragment: typeof import('./src/fragments/competition')['competitionFragment']
  const competitionStatsFragment: typeof import('./src/fragments/stats')['competitionStatsFragment']
  const computed: typeof import('vue')['computed']
  const contractFragment: typeof import('./src/fragments/player')['contractFragment']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const fixtureFragment: typeof import('./src/fragments/competition')['fixtureFragment']
  const fixtureLegFragment: typeof import('./src/fragments/competition')['fixtureLegFragment']
  const format: typeof import('date-fns')['format']
  const formatDate: typeof import('./src/helpers/formatters.js')['formatDate']
  const formatMoney: typeof import('./src/helpers/formatters.js')['formatMoney']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const goalFragment: typeof import('./src/fragments/match')['goalFragment']
  const gql: typeof import('@urql/vue')['gql']
  const h: typeof import('vue')['h']
  const inRange: typeof import('./src/helpers/rules.js')['inRange']
  const inject: typeof import('vue')['inject']
  const injuryFragment: typeof import('./src/fragments/player')['injuryFragment']
  const isNumber: typeof import('./src/helpers/rules.js')['isNumber']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isRequired: typeof import('./src/helpers/rules.js')['isRequired']
  const loanFragment: typeof import('./src/fragments/player')['loanFragment']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const matchFragment: typeof import('./src/fragments/match')['matchFragment']
  const matchPositions: typeof import('./src/constants/index.js')['matchPositions']
  const nationalities: typeof import('./src/constants/index.js')['nationalities']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const parseISO: typeof import('date-fns')['parseISO']
  const penaltyShootoutFragment: typeof import('./src/fragments/match')['penaltyShootoutFragment']
  const playerDevelopmentStatsFragment: typeof import('./src/fragments/stats')['playerDevelopmentStatsFragment']
  const playerFragment: typeof import('./src/fragments/player')['playerFragment']
  const playerHistoryFragment: typeof import('./src/fragments/player')['playerHistoryFragment']
  const playerPerformanceStatsFragment: typeof import('./src/fragments/stats')['playerPerformanceStatsFragment']
  const positions: typeof import('./src/constants/index.js')['positions']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const squadFragment: typeof import('./src/fragments/squad')['squadFragment']
  const squadPlayerFragment: typeof import('./src/fragments/squad')['squadPlayerFragment']
  const stageFragment: typeof import('./src/fragments/competition')['stageFragment']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const substitutionFragment: typeof import('./src/fragments/match')['substitutionFragment']
  const tableRowFragment: typeof import('./src/fragments/competition')['tableRowFragment']
  const teamDevelopmentStatsFragment: typeof import('./src/fragments/stats')['teamDevelopmentStatsFragment']
  const teamFragment: typeof import('./src/fragments/team')['teamFragment']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const transferFragment: typeof import('./src/fragments/player')['transferFragment']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useActivePlayers: typeof import('./src/composables/useActivePlayers.js')['default']
  const useAttrs: typeof import('vue')['useAttrs']
  const useBroadcastStore: typeof import('./src/store/broadcast.js')['useBroadcastStore']
  const useCompetition: typeof import('./src/composables/useCompetition.js')['default']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDisplay: typeof import('vuetify')['useDisplay']
  const useForm: typeof import('./src/composables/useForm.js')['default']
  const useMatch: typeof import('./src/composables/useMatch.js')['default']
  const useMutation: typeof import('@urql/vue')['useMutation']
  const useQuery: typeof import('@urql/vue')['useQuery']
  const useRepo: typeof import('pinia-orm')['useRepo']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useServerSideProcessing: typeof import('./src/composables/useServerSideProcessing.js')['default']
  const useSession: typeof import('./src/composables/useSession.js')['default']
  const useSessionStore: typeof import('./src/store/session.js')['useSessionStore']
  const useSlots: typeof import('vue')['useSlots']
  const useTeam: typeof import('./src/composables/useTeam.js')['default']
  const useTeamQuery: typeof import('./src/composables/useTeamQuery.js')['default']
  const useTheme: typeof import('vuetify')['useTheme']
  const userFragment: typeof import('./src/fragments/user')['userFragment']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly Booking: UnwrapRef<typeof import('./src/models/Booking.js')['Booking']>
    readonly Cap: UnwrapRef<typeof import('./src/models/Cap.js')['Cap']>
    readonly Competition: UnwrapRef<typeof import('./src/models/Competition.js')['Competition']>
    readonly Contract: UnwrapRef<typeof import('./src/models/Contract.js')['Contract']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Fixture: UnwrapRef<typeof import('./src/models/Fixture.js')['Fixture']>
    readonly FixtureLeg: UnwrapRef<typeof import('./src/models/FixtureLeg.js')['FixtureLeg']>
    readonly Goal: UnwrapRef<typeof import('./src/models/Goal.js')['Goal']>
    readonly Injury: UnwrapRef<typeof import('./src/models/Injury.js')['Injury']>
    readonly Loan: UnwrapRef<typeof import('./src/models/Loan.js')['Loan']>
    readonly Match: UnwrapRef<typeof import('./src/models/Match.js')['Match']>
    readonly PenaltyShootout: UnwrapRef<typeof import('./src/models/PenaltyShootout.js')['PenaltyShootout']>
    readonly Player: UnwrapRef<typeof import('./src/models/Player.js')['Player']>
    readonly PlayerHistory: UnwrapRef<typeof import('./src/models/PlayerHistory.js')['PlayerHistory']>
    readonly Squad: UnwrapRef<typeof import('./src/models/Squad.js')['Squad']>
    readonly SquadPlayer: UnwrapRef<typeof import('./src/models/SquadPlayer.js')['SquadPlayer']>
    readonly Stage: UnwrapRef<typeof import('./src/models/Stage.js')['Stage']>
    readonly Substitution: UnwrapRef<typeof import('./src/models/Substitution.js')['Substitution']>
    readonly TableRow: UnwrapRef<typeof import('./src/models/TableRow.js')['TableRow']>
    readonly Team: UnwrapRef<typeof import('./src/models/Team.js')['Team']>
    readonly Transfer: UnwrapRef<typeof import('./src/models/Transfer.js')['Transfer']>
    readonly User: UnwrapRef<typeof import('./src/models/User.js')['User']>
    readonly _groupBy: UnwrapRef<typeof import('lodash.groupby')['default']>
    readonly _keyBy: UnwrapRef<typeof import('lodash.keyby')['default']>
    readonly _orderBy: UnwrapRef<typeof import('lodash.orderby')['default']>
    readonly _pick: UnwrapRef<typeof import('lodash.pick')['default']>
    readonly acceptHMRUpdate: UnwrapRef<typeof import('pinia')['acceptHMRUpdate']>
    readonly axios: UnwrapRef<typeof import('axios')['default']>
    readonly baseCapFragment: UnwrapRef<typeof import('./src/fragments/match')['baseCapFragment']>
    readonly baseSquadFragment: UnwrapRef<typeof import('./src/fragments/squad')['baseSquadFragment']>
    readonly baseSquadPlayerFragment: UnwrapRef<typeof import('./src/fragments/squad')['baseSquadPlayerFragment']>
    readonly baseStageFragment: UnwrapRef<typeof import('./src/fragments/competition')['baseStageFragment']>
    readonly bookingFragment: UnwrapRef<typeof import('./src/fragments/match')['bookingFragment']>
    readonly capFragment: UnwrapRef<typeof import('./src/fragments/match')['capFragment']>
    readonly capitalize: UnwrapRef<typeof import('./src/helpers/formatters.js')['capitalize']>
    readonly competitionFragment: UnwrapRef<typeof import('./src/fragments/competition')['competitionFragment']>
    readonly competitionStatsFragment: UnwrapRef<typeof import('./src/fragments/stats')['competitionStatsFragment']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly contractFragment: UnwrapRef<typeof import('./src/fragments/player')['contractFragment']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createPinia: UnwrapRef<typeof import('pinia')['createPinia']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly fixtureFragment: UnwrapRef<typeof import('./src/fragments/competition')['fixtureFragment']>
    readonly fixtureLegFragment: UnwrapRef<typeof import('./src/fragments/competition')['fixtureLegFragment']>
    readonly format: UnwrapRef<typeof import('date-fns')['format']>
    readonly formatDate: UnwrapRef<typeof import('./src/helpers/formatters.js')['formatDate']>
    readonly formatMoney: UnwrapRef<typeof import('./src/helpers/formatters.js')['formatMoney']>
    readonly getActivePinia: UnwrapRef<typeof import('pinia')['getActivePinia']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly goalFragment: UnwrapRef<typeof import('./src/fragments/match')['goalFragment']>
    readonly gql: UnwrapRef<typeof import('@urql/vue')['gql']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inRange: UnwrapRef<typeof import('./src/helpers/rules.js')['inRange']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly injuryFragment: UnwrapRef<typeof import('./src/fragments/player')['injuryFragment']>
    readonly isNumber: UnwrapRef<typeof import('./src/helpers/rules.js')['isNumber']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isRequired: UnwrapRef<typeof import('./src/helpers/rules.js')['isRequired']>
    readonly loanFragment: UnwrapRef<typeof import('./src/fragments/player')['loanFragment']>
    readonly mapActions: UnwrapRef<typeof import('pinia')['mapActions']>
    readonly mapGetters: UnwrapRef<typeof import('pinia')['mapGetters']>
    readonly mapState: UnwrapRef<typeof import('pinia')['mapState']>
    readonly mapStores: UnwrapRef<typeof import('pinia')['mapStores']>
    readonly mapWritableState: UnwrapRef<typeof import('pinia')['mapWritableState']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly matchFragment: UnwrapRef<typeof import('./src/fragments/match')['matchFragment']>
    readonly matchPositions: UnwrapRef<typeof import('./src/constants/index.js')['matchPositions']>
    readonly nationalities: UnwrapRef<typeof import('./src/constants/index.js')['nationalities']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly parseISO: UnwrapRef<typeof import('date-fns')['parseISO']>
    readonly penaltyShootoutFragment: UnwrapRef<typeof import('./src/fragments/match')['penaltyShootoutFragment']>
    readonly playerDevelopmentStatsFragment: UnwrapRef<typeof import('./src/fragments/stats')['playerDevelopmentStatsFragment']>
    readonly playerFragment: UnwrapRef<typeof import('./src/fragments/player')['playerFragment']>
    readonly playerHistoryFragment: UnwrapRef<typeof import('./src/fragments/player')['playerHistoryFragment']>
    readonly playerPerformanceStatsFragment: UnwrapRef<typeof import('./src/fragments/stats')['playerPerformanceStatsFragment']>
    readonly positions: UnwrapRef<typeof import('./src/constants/index.js')['positions']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setActivePinia: UnwrapRef<typeof import('pinia')['setActivePinia']>
    readonly setMapStoreSuffix: UnwrapRef<typeof import('pinia')['setMapStoreSuffix']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly squadFragment: UnwrapRef<typeof import('./src/fragments/squad')['squadFragment']>
    readonly squadPlayerFragment: UnwrapRef<typeof import('./src/fragments/squad')['squadPlayerFragment']>
    readonly stageFragment: UnwrapRef<typeof import('./src/fragments/competition')['stageFragment']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly substitutionFragment: UnwrapRef<typeof import('./src/fragments/match')['substitutionFragment']>
    readonly tableRowFragment: UnwrapRef<typeof import('./src/fragments/competition')['tableRowFragment']>
    readonly teamDevelopmentStatsFragment: UnwrapRef<typeof import('./src/fragments/stats')['teamDevelopmentStatsFragment']>
    readonly teamFragment: UnwrapRef<typeof import('./src/fragments/team')['teamFragment']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly transferFragment: UnwrapRef<typeof import('./src/fragments/player')['transferFragment']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useActivePlayers: UnwrapRef<typeof import('./src/composables/useActivePlayers.js')['default']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useBroadcastStore: UnwrapRef<typeof import('./src/store/broadcast.js')['useBroadcastStore']>
    readonly useCompetition: UnwrapRef<typeof import('./src/composables/useCompetition.js')['default']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDisplay: UnwrapRef<typeof import('vuetify')['useDisplay']>
    readonly useForm: UnwrapRef<typeof import('./src/composables/useForm.js')['default']>
    readonly useMatch: UnwrapRef<typeof import('./src/composables/useMatch.js')['default']>
    readonly useMutation: UnwrapRef<typeof import('@urql/vue')['useMutation']>
    readonly useQuery: UnwrapRef<typeof import('@urql/vue')['useQuery']>
    readonly useRepo: UnwrapRef<typeof import('pinia-orm')['useRepo']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useServerSideProcessing: UnwrapRef<typeof import('./src/composables/useServerSideProcessing.js')['default']>
    readonly useSession: UnwrapRef<typeof import('./src/composables/useSession.js')['default']>
    readonly useSessionStore: UnwrapRef<typeof import('./src/store/session.js')['useSessionStore']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTeam: UnwrapRef<typeof import('./src/composables/useTeam.js')['default']>
    readonly useTeamQuery: UnwrapRef<typeof import('./src/composables/useTeamQuery.js')['default']>
    readonly useTheme: UnwrapRef<typeof import('vuetify')['useTheme']>
    readonly userFragment: UnwrapRef<typeof import('./src/fragments/user')['userFragment']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
